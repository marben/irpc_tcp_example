// Code generated by irpc generator; DO NOT EDIT
package irpc_tcp_example

import (
	"context"
	"fmt"
	"github.com/marben/irpc/irpcgen"
	"time"
)

type StringToolIRpcService struct {
	impl StringTool
	id   []byte
}

func NewStringToolIRpcService(impl StringTool) *StringToolIRpcService {
	return &StringToolIRpcService{
		impl: impl,
		id: []byte{
			0x0b, 0x6d, 0x06, 0x59, 0x5a, 0x15, 0x8c, 0xce,
			0xdd, 0x4e, 0x68, 0x77, 0xd2, 0x52, 0xc7, 0x69,
			0xc8, 0xd2, 0xb8, 0xf7, 0x1e, 0x18, 0x58, 0xb8,
			0xf8, 0x84, 0xad, 0x4c, 0x38, 0x57, 0x9b, 0x59,
		},
	}
}
func (s *StringToolIRpcService) Id() []byte {
	return s.id
}
func (s *StringToolIRpcService) GetFuncCall(funcId irpcgen.FuncId) (irpcgen.ArgDeserializer, error) {
	switch funcId {
	case 0: // Reverse
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_StringToolReverseReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_StringToolReverseResp
				resp.Param0, resp.Param1 = s.impl.Reverse(args.Param0_in)
				return resp
			}, nil
		}, nil
	case 1: // Repeat
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_StringToolRepeatReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_StringToolRepeatResp
				resp.Param0, resp.Param1 = s.impl.Repeat(args.Param0_in, args.Param1_n)
				return resp
			}, nil
		}, nil
	case 2: // TimeToStr
		return func(d *irpcgen.Decoder) (irpcgen.FuncExecutor, error) {
			// DESERIALIZE
			var args _Irpc_StringToolTimeToStrReq
			if err := args.Deserialize(d); err != nil {
				return nil, err
			}
			return func(ctx context.Context) irpcgen.Serializable {
				// EXECUTE
				var resp _Irpc_StringToolTimeToStrResp
				resp.Param0, resp.Param1 = s.impl.TimeToStr(args.Param0_t)
				return resp
			}, nil
		}, nil
	default:
		return nil, fmt.Errorf("function '%d' doesn't exist on service '%s'", funcId, s.Id())
	}
}

type StringToolIRpcClient struct {
	endpoint irpcgen.Endpoint
	id       []byte
}

func NewStringToolIRpcClient(endpoint irpcgen.Endpoint) (*StringToolIRpcClient, error) {
	id := []byte{
		0x0b, 0x6d, 0x06, 0x59, 0x5a, 0x15, 0x8c, 0xce,
		0xdd, 0x4e, 0x68, 0x77, 0xd2, 0x52, 0xc7, 0x69,
		0xc8, 0xd2, 0xb8, 0xf7, 0x1e, 0x18, 0x58, 0xb8,
		0xf8, 0x84, 0xad, 0x4c, 0x38, 0x57, 0x9b, 0x59,
	}
	if err := endpoint.RegisterClient(id); err != nil {
		return nil, fmt.Errorf("register failed: %w", err)
	}
	return &StringToolIRpcClient{endpoint: endpoint, id: id}, nil
}
func (_c *StringToolIRpcClient) Reverse(in string) (string, error) {
	var req = _Irpc_StringToolReverseReq{
		Param0_in: in,
	}
	var resp _Irpc_StringToolReverseResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 0, req, &resp); err != nil {
		var zero _Irpc_StringToolReverseResp
		return zero.Param0, err
	}
	return resp.Param0, resp.Param1
}
func (_c *StringToolIRpcClient) Repeat(in string, n int) (string, error) {
	var req = _Irpc_StringToolRepeatReq{
		Param0_in: in,
		Param1_n:  n,
	}
	var resp _Irpc_StringToolRepeatResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 1, req, &resp); err != nil {
		var zero _Irpc_StringToolRepeatResp
		return zero.Param0, err
	}
	return resp.Param0, resp.Param1
}
func (_c *StringToolIRpcClient) TimeToStr(t time.Time) (string, error) {
	var req = _Irpc_StringToolTimeToStrReq{
		Param0_t: t,
	}
	var resp _Irpc_StringToolTimeToStrResp
	if err := _c.endpoint.CallRemoteFunc(context.Background(), _c.id, 2, req, &resp); err != nil {
		var zero _Irpc_StringToolTimeToStrResp
		return zero.Param0, err
	}
	return resp.Param0, resp.Param1
}

type _Irpc_StringToolReverseReq struct {
	Param0_in string
}

func (s _Irpc_StringToolReverseReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.String(s.Param0_in); err != nil {
		return fmt.Errorf("serialize s.Param0_in of type \"string\": %w", err)
	}
	return nil
}
func (s *_Irpc_StringToolReverseReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.String(&s.Param0_in); err != nil {
		return fmt.Errorf("deserialize s.Param0_in of type \"string\": %w", err)
	}
	return nil
}

type _Irpc_StringToolReverseResp struct {
	Param0 string
	Param1 error
}

func (s _Irpc_StringToolReverseResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.String(s.Param0); err != nil {
		return fmt.Errorf("serialize s.Param0 of type \"string\": %w", err)
	}
	{
		var isNil bool
		if s.Param1 == nil {
			isNil = true
		}
		if err := e.Bool(isNil); err != nil {
			return fmt.Errorf("serialize isNil of type \"bool\": %w", err)
		}

		if !isNil {
			{ // Error()
				_Error_0_ := s.Param1.Error()
				if err := e.String(_Error_0_); err != nil {
					return fmt.Errorf("serialize _Error_0_ of type \"string\": %w", err)
				}
			}
		}
	}
	return nil
}
func (s *_Irpc_StringToolReverseResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.String(&s.Param0); err != nil {
		return fmt.Errorf("deserialize s.Param0 of type \"string\": %w", err)
	}
	{
		var isNil bool
		if err := d.Bool(&isNil); err != nil {
			return fmt.Errorf("deserialize isNil of type \"bool\": %w", err)
		}

		if isNil {
			s.Param1 = nil
		} else {
			var impl _error_StringTool_impl
			{ // Error()
				if err := d.String(&impl._Error_0_); err != nil {
					return fmt.Errorf("deserialize impl._Error_0_ of type \"string\": %w", err)
				}
			}
			s.Param1 = impl
		}
	}
	return nil
}

type _error_StringTool_impl struct {
	_Error_0_ string
}

func (i _error_StringTool_impl) Error() string {
	return i._Error_0_
}

type _Irpc_StringToolRepeatReq struct {
	Param0_in string
	Param1_n  int
}

func (s _Irpc_StringToolRepeatReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.String(s.Param0_in); err != nil {
		return fmt.Errorf("serialize s.Param0_in of type \"string\": %w", err)
	}
	if err := e.VarInt(s.Param1_n); err != nil {
		return fmt.Errorf("serialize s.Param1_n of type \"int\": %w", err)
	}
	return nil
}
func (s *_Irpc_StringToolRepeatReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.String(&s.Param0_in); err != nil {
		return fmt.Errorf("deserialize s.Param0_in of type \"string\": %w", err)
	}
	if err := d.VarInt(&s.Param1_n); err != nil {
		return fmt.Errorf("deserialize s.Param1_n of type \"int\": %w", err)
	}
	return nil
}

type _Irpc_StringToolRepeatResp struct {
	Param0 string
	Param1 error
}

func (s _Irpc_StringToolRepeatResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.String(s.Param0); err != nil {
		return fmt.Errorf("serialize s.Param0 of type \"string\": %w", err)
	}
	{
		var isNil bool
		if s.Param1 == nil {
			isNil = true
		}
		if err := e.Bool(isNil); err != nil {
			return fmt.Errorf("serialize isNil of type \"bool\": %w", err)
		}

		if !isNil {
			{ // Error()
				_Error_0_ := s.Param1.Error()
				if err := e.String(_Error_0_); err != nil {
					return fmt.Errorf("serialize _Error_0_ of type \"string\": %w", err)
				}
			}
		}
	}
	return nil
}
func (s *_Irpc_StringToolRepeatResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.String(&s.Param0); err != nil {
		return fmt.Errorf("deserialize s.Param0 of type \"string\": %w", err)
	}
	{
		var isNil bool
		if err := d.Bool(&isNil); err != nil {
			return fmt.Errorf("deserialize isNil of type \"bool\": %w", err)
		}

		if isNil {
			s.Param1 = nil
		} else {
			var impl _error_StringTool_impl
			{ // Error()
				if err := d.String(&impl._Error_0_); err != nil {
					return fmt.Errorf("deserialize impl._Error_0_ of type \"string\": %w", err)
				}
			}
			s.Param1 = impl
		}
	}
	return nil
}

type _Irpc_StringToolTimeToStrReq struct {
	Param0_t time.Time
}

func (s _Irpc_StringToolTimeToStrReq) Serialize(e *irpcgen.Encoder) error {
	if err := e.BinaryMarshaler(s.Param0_t); err != nil {
		return fmt.Errorf("serialize s.Param0_t of type \"encoding.BinaryUnmarshaler\": %w", err)
	}
	return nil
}
func (s *_Irpc_StringToolTimeToStrReq) Deserialize(d *irpcgen.Decoder) error {
	if err := d.BinaryUnmarshaler(&s.Param0_t); err != nil {
		return fmt.Errorf("deserialize s.Param0_t of type \"encoding.BinaryUnmarshaler\": %w", err)
	}
	return nil
}

type _Irpc_StringToolTimeToStrResp struct {
	Param0 string
	Param1 error
}

func (s _Irpc_StringToolTimeToStrResp) Serialize(e *irpcgen.Encoder) error {
	if err := e.String(s.Param0); err != nil {
		return fmt.Errorf("serialize s.Param0 of type \"string\": %w", err)
	}
	{
		var isNil bool
		if s.Param1 == nil {
			isNil = true
		}
		if err := e.Bool(isNil); err != nil {
			return fmt.Errorf("serialize isNil of type \"bool\": %w", err)
		}

		if !isNil {
			{ // Error()
				_Error_0_ := s.Param1.Error()
				if err := e.String(_Error_0_); err != nil {
					return fmt.Errorf("serialize _Error_0_ of type \"string\": %w", err)
				}
			}
		}
	}
	return nil
}
func (s *_Irpc_StringToolTimeToStrResp) Deserialize(d *irpcgen.Decoder) error {
	if err := d.String(&s.Param0); err != nil {
		return fmt.Errorf("deserialize s.Param0 of type \"string\": %w", err)
	}
	{
		var isNil bool
		if err := d.Bool(&isNil); err != nil {
			return fmt.Errorf("deserialize isNil of type \"bool\": %w", err)
		}

		if isNil {
			s.Param1 = nil
		} else {
			var impl _error_StringTool_impl
			{ // Error()
				if err := d.String(&impl._Error_0_); err != nil {
					return fmt.Errorf("deserialize impl._Error_0_ of type \"string\": %w", err)
				}
			}
			s.Param1 = impl
		}
	}
	return nil
}
