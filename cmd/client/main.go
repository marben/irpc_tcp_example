package main

import (
	"github.com/marben/irpc/pkg/irpc"
	"irpc_tcp_example"
	"log"
	"net"
)

func main() {
	log.Println("connecting")

	// standart net.Dial tcp connection
	conn, err := net.Dial("tcp", ":8080")
	if err != nil {
		log.Fatalf("failed to connect: %v", err)
	}
	defer conn.Close()

	// endpoint is needed on both sides of connection.
	// irpc.NewEndpoint() can also register services, if client were to provide services to the server
	ep := irpc.NewEndpoint(conn)

	// NewRemoteMathIRpcClient is generated by irpc command from our RemoteMath interface
	mathClient, err := irpc_tcp_example.NewRemoteMathIRpcClient(ep)
	if err != nil {
		log.Fatalf("failed to create client: %v", err)
	}

	res, err := mathClient.Add(1, 2)
	if err != nil {
		log.Fatalf("failed remote call: %v", err)
	}

	log.Printf("remote call Add(1, 2) -> %d (mind the skew)", res)
}
